{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","placeholder","TextForm","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","captitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2a6385cd.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n         <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n             <li className=\"nav-item\">\r\n            <a className=\"nav-a active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-a\" href=\"/\">About</a>\r\n        </li>\r\n      </ul>\r\n   \r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-2`}>\r\n        <input className=\"form-check-input\" onClick = {props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode==='light'?'DarkMode':'LightMode'}</label>\r\n      </div>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form>\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n}\r\n\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\",\"success\");\r\n    }\r\n    \r\n    const handlelowClick = ()=>{\r\n        // console.log(\"uppercase was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase!\",\"success\");\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"onChange\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text is copy to cilpborad\",\"success\");\r\n    } \r\n    const handleClear = () => {\r\n        setText(\"\");\r\n        props.showAlert(\"Clear All text \",\"success\");\r\n    } \r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Remove the extra sapace in yours text\",\"success\");\r\n    }\r\n    const [text, setText] = useState('Enter text here')\r\n\r\n    return (\r\n        <>\r\n        <div className = \"container\" style={{color:props.mode==='light'?'black':'white'}}>\r\n            <h2 >{props.heading}</h2>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} style={{backgroundColor:props.mode==='light'?'white':'gray', color:props.mode==='light'?'black':'white'}} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to Upprecase</button>\r\n            <button className=\"btn btn-primary  mx-2\" onClick={handlelowClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary  mx-2\" onClick={handleCopy}>Copy text</button>\r\n            <button className=\"btn btn-primary  mx-2\" onClick={handleClear}>Clear text</button>\r\n            <button className=\"btn btn-primary  mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode==='light'?'black':'white'}}>\r\n            <h2 >Your text summary</h2>\r\n            <p >{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p >{0.008 * text.split(\" \").length} Minutes read</p>\r\n            <h2 >Perview</h2>\r\n            <p >{text.length>0?text:'Enter something in the textbox above to preview it have'}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const captitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{captitalize( props.alert.type)}</strong>: {props.alert.msg}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport React, { useState } from 'react';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type) =>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode = ()=>{\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#425d79';\n      showAlert(\"Dark Mode has been enble\", \"success\")   \n      document.title = 'TextUtility - DrakMode';\n      setTimeout(() => {\n        document.title = 'TextUtility-Home';\n      }, 1500);\n      \n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enble\", \"success\")\n      document.title = 'TextUtility - LightMode';\n      setTimeout(() => {\n        document.title = 'TextUtility-Home';\n      }, 1500);    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title = \"Chetan Dewasi\" mode = {mode} toggleMode = {toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n      {/* <Switch>\n        <Route path='/about'>\n            <About/>\n        </Route>\n        <Route path='/'> */}\n          <TextForm showAlert={showAlert} heading = \"Enter the text to analyze\" mode = {mode}/>\n        {/* </Route>\n        \n      </Switch> */}\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}